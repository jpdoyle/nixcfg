# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, ... }:

{
  imports =
    [ <nixpkgs/nixos/modules/installer/scan/not-detected.nix>
    ];

  boot.initrd.availableKernelModules = [
    "xhci_pci" "usb_storage" "usbhid" "sd_mod" "sdhci_acpi"
  ];
  boot.kernelModules = [ "kvm-intel" "fbcon" "snd-seq" "snd-rawmidi"
    "tun" "virtio"
  ];
  boot.extraModulePackages = [ ];
  boot.extraModprobeConfig = ''
    options snd_hda_intel index=0 model=,alc283-chrome
  '';

  boot.initrd.luks.devices = [
    { name = "lvm"; device = "/dev/mmcblk0p2"; preLVM = true; }
  ];
  systemd.services.mountSD =
    let sdPath = "/dev/disk/by-uuid/bcedbd17-190f-4977-81f3-4b9e8dcb906b";
    in
    {
        enable = true;
        description = "Remount encrypted SD card";
        restartTriggers = [ sdPath ];
        script = ''
            while ! [[ -e ${sdPath} ]]; do sleep 1; done
            mkdir -p /sd
            ls /dev >/root/devices
            args="--key-file /root/keyfile ${sdPath} sd"
            args="$args --verbose --debug"
            ${pkgs.cryptsetup}/bin/cryptsetup luksOpen $args
            ${pkgs.utillinux}/bin/mount -o defaults /dev/mapper/sd /sd
            ${pkgs.coreutils}/bin/chown -R :wheel /sd
            ${pkgs.coreutils}/bin/chmod -R g=u /sd
            while [[ -e ${sdPath} ]]; do sleep 1; done
        '';
        preStop = ''
            ${pkgs.utillinux}/bin/umount /sd || true
            ${pkgs.cryptsetup}/bin/cryptsetup close sd || true
            rm -r /sd || true
        '';
        serviceConfig = {
            Restart = "always";
        };
        wantedBy = [ "multi-user.target" ];
        after = [ "systemd-udev-settle.service" ];
    };

  fileSystems."/".device = "/dev/mapper/vg-root";
  # fileSystems."/sd" = {
  #   device = "/dev/mapper/sd";
  #   neededForBoot = false;
  #   encrypted = {
  #       enable = true;
  #       keyFile = "/root/keyfile";
  #       blkDev = "/dev/mmcblk1p2";
  #       label = "sd";
  #   };
  #   options = [ "gid=wheel" ];
  # };

  fileSystems."/boot" =
    { device = "/dev/mmcblk0p1";
      fsType = "ext4";
    };

  # swapDevices = [ { device = "/dev/mapper/vg-swap"; } ];

  nix.maxJobs = lib.mkDefault 2;
}
